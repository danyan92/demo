spring:
  ##数据库连接信息
  datasource:
    url: jdbc:mysql://localhost:3306/demo
    username: root
    password: root
    driver-class-name: com.mysql.cj.jdbc.Driver
    ###################以下为druid增加的配置###########################
    type: com.alibaba.druid.pool.DruidDataSource
    # 下面为连接池的补充设置，应用到上面所有数据源中
    # 初始化大小，最小，最大
    initialSize: 5
    minIdle: 5
    maxActive: 20
    # 配置获取连接等待超时的时间
    maxWait: 60000
    # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
    timeBetweenEvictionRunsMillis: 60000
    # 配置一个连接在池中最小生存的时间，单位是毫秒
    minEvictableIdleTimeMillis: 300000
    validationQuery: SELECT 1 FROM DUAL
    testWhileIdle: true
    testOnBorrow: false
    testOnReturn: false
    # 打开PSCache，并且指定每个连接上PSCache的大小
    poolPreparedStatements: true
    maxPoolPreparedStatementPerConnectionSize: 20
    # 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙，此处是filter修改的地方
    filters: stat,wall,log4j2
    # 通过connectProperties属性来打开mergeSql功能；慢SQL记录
    connectionProperties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
    # 合并多个DruidDataSource的监控数据
    useGlobalDataSourceStat: true
    logSlowSql: true
#redis配置
  redis:
    database: 15
    port: 6479
    host: 192.168.206.99
    password:
    timeout: 1s
    #lettuce redis连接池，线程安全，减少物理内存消耗
    lettuce:
      pool:
        max-active: 8
        max-wait: 300ms
        max-idle: 16
        min-idle: 8
#session使用redis
#  session:
#    store-type: redis
#    redis:
#      flush-mode: on_save
#      #添加后，redis中的key为spring:session:myproject
#      namespace: ch
mybatis:
  mapper-locations: classpath*:com/ch/example/mapper/xml/*.xml
  type-aliases-package: com.ch.example.entity
  #日志输出
  configuration:
    log-impl: org.apache.ibatis.logging.log4j2.Log4j2Impl
swagger:
  show: true
logging:
  #使用log4j
  config: classpath:log4j2.xml




